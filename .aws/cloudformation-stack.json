{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This Cloudformation Template deploys an entire stack for a AVCorn client.",
    "Parameters": {
        "KeyName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the ECS instances."
        },
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "Select a VPC that allows instances to access the Internet."
        },
        "SubnetId": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "Select at least two subnets in your selected VPC."
        },
        "DesiredCapacity": {
            "Type": "Number",
            "Default": "1",
            "Description": "Number of instances to launch in your ECS cluster."
        },
        "MaxSize": {
            "Type": "Number",
            "Default": 16,
            "Description": "Maximum number of instances that can be launched in your ECS cluster."
        },
        "InstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "t3.nano",
            "AllowedValues": [
            	"t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t3.nano",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "m4.large",
                "m4.xlarge",
                "m5.large",
                "m5.xlarge",
                "c4.large",
                "c4.xlarge",
                "c5.large",
                "c5.xlarge",
                "r4.large",
                "r4.xlarge",
                "r5.large",
                "r5.xlarge",
                "d2.xlarge",
                "d3.xlarge"
            ],
            "ConstraintDescription": "Please choose a valid instance type."
        }
    },
    "Transform": [
        "AWS::CodeDeployBlueGreen"
    ],
    "Hooks": {
        "CodeDeployBlueGreenHook": {
            "Properties": {
                "TrafficRoutingConfig": {
                    "Type": "TimeBasedCanary",
                    "TimeBasedCanary": {
                        "StepPercentage": 15,
                        "BakeTimeMins": 5
                    }
                },
                "Applications": [
                    {
                        "Target": {
                            "Type": "AWS::ECS::Service",
                            "LogicalID": {
                                "Fn::Join": [
                                    "-",
                                    [
                                        {
                                            "Ref": "AWS::StackName"
                                        },
                                        "service"
                                    ]
                                ]
                            }
                        },
                        "ECSAttributes": {
                            "TaskDefinitions": [
                                {
                                    "Fn::Join": [
                                        "-",
                                        [
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "taskdef"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "-",
                                        [
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "taskdef"
                                        ]
                                    ]
                                }
                            ],
                            "TaskSets": [
                                {
                                    "Fn::Join": [
                                        "-",
                                        [
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "taskset"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "-",
                                        [
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "taskset"
                                        ]
                                    ]
                                }
                            ],
                            "TrafficRouting": {
                                "ProdTrafficRoute": {
                                    "Type": "AWS::ElasticLoadBalancingV2::Listener",
                                    "LogicalID": {
                                        "Fn::Join": [
                                            "-",
                                            [
                                                {
                                                    "Ref": "AWS::StackName"
                                                },
                                                "loadbalancer"
                                            ]
                                        ]
                                    }
                                },
                                "TargetGroups": [
                                    {
                                        "Fn::Join": [
                                            "-",
                                            [
                                                {
                                                    "Ref": "AWS::StackName"
                                                },
                                                "targetgroup"
                                            ]
                                        ]
                                    },
                                    {
                                        "Fn::Join": [
                                            "-",
                                            [
                                                {
                                                    "Ref": "AWS::StackName"
                                                },
                                                "targetgroup"
                                            ]
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "Type": "AWS::CodeDeploy::BlueGreen"
        }
    },
    "Mappings": {
        "AWSRegionToAMI": {
            "us-east-1": {
                "AMIID": "ami-09bee01cc997a78a6"
            },
            "us-east-2": {
                "AMIID": "ami-0a9e12068cb98a01d"
            },
            "us-west-1": {
                "AMIID": "ami-0fa6c8d131a220017"
            },
            "us-west-2": {
                "AMIID": "ami-078c97cf1cefd1b38"
            },
            "eu-west-1": {
                "AMIID": "ami-0c9ef930279337028"
            },
            "eu-central-1": {
                "AMIID": "ami-065c1e34da68f2b02"
            },
            "ap-northeast-1": {
                "AMIID": "ami-02265963d1614d04d"
            },
            "ap-southeast-1": {
                "AMIID": "ami-0b68661b29b9e058c"
            },
            "ap-southeast-2": {
                "AMIID": "ami-00e4b147599c13588"
            }
        }
    },
    "Resources": {
        "InstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com",
                                    "ecs-tasks.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "ecs-service",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "ecr:BatchGetImage",
		                                "ecr:GetDownloadUrlForLayer",
		                                "ecr:GetAuthorizationToken"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs.amazonaws.com",
                                    "ecs-tasks.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "ecs-service",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                        "elasticloadbalancing:DeregisterTargets",
                                        "elasticloadbalancing:Describe*",
                                        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                        "elasticloadbalancing:RegisterTargets",
                                        "ec2:Describe*",
                                        "ec2:AuthorizeSecurityGroupIngress",
                                        "ecr:BatchGetImage",
		                                "ecr:GetDownloadUrlForLayer",
		                                "ecr:GetAuthorizationToken"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ScalingRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "application-autoscaling.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "service-autoscaling",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "application-autoscaling:*",
                                        "cloudwatch:DescribeAlarms",
                                        "cloudwatch:PutMetricAlarm",
                                        "ecs:DescribeServices",
                                        "ecs:UpdateService"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "TaskRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ecs-tasks.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
                ]
            }
        },
        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            }
        },
        "Repository": {
            "Type": "AWS::ECR::Repository",
            "DependsOn": "ServiceRole",
            "Properties": {
                "RepositoryName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "image"
                        ]
                    ]
                },
                "EmptyOnDelete": true,
                "RepositoryPolicyText": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "AllowPushPull",
                            "Effect": "Allow",
                            "Action": [
                                "ecr:BatchGetImage",
                                "ecr:GetDownloadUrlForLayer",
                                "ecr:GetAuthorizationToken"
                            ],
                            "Principal": {
                                "AWS": {
                                	"Fn::GetAtt": [
				                        "ServiceRole",
				                        "Arn"
				                    ]
                                }
                            }
                        }
                    ]
                },
                "LifecyclePolicy": {
                    "LifecyclePolicyText": "{\"rules\": [{\"rulePriority\": 1, \"description\": \"Expire images older than a year\", \"selection\": {\"tagStatus\": \"untagged\", \"countType\": \"sinceImagePushed\", \"countUnit\": \"days\", \"countNumber\": 365}, \"action\": {\"type\": \"expire\"}}]}"
                }
            }
        },
        "Cluster": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "cluster"
                        ]
                    ]
                }
            }
        },
        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "securitygroup"
                        ]
                    ]
                },
                "GroupDescription": "ECS Security Group",
                "VpcId": {
                    "Ref": "VpcId"
                }
            }
        },
        "HttpIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "SecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": 80,
                "ToPort": 80,
                "CidrIp": "0.0.0.0/0"
            }
        },
        "SshIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "SecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": 22,
                "ToPort": 22,
                "CidrIp": "0.0.0.0/0"
            }
        },
        "AlbIngress": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "SecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": 31000,
                "ToPort": 61000,
                "SourceSecurityGroupId": {
                    "Ref": "SecurityGroup"
                }
            }
        },
        "LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "loggroup"
                        ]
                    ]
                },
                "RetentionInDays": 14
            }
        },
        "TaskDefinition": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "Family": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "taskdef"
                        ]
                    ]
                },
                "Cpu": 256,
                "Memory": 409,
                "NetworkMode": "awsvpc",
                "ExecutionRoleArn": {
                    "Fn::GetAtt": [
                        "TaskRole",
                        "Arn"
                    ]
                },
                "ContainerDefinitions": [
                    {
                        "Name": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "container"
                                ]
                            ]
                        },
                        "Essential": "true",
                        "Image": "public.ecr.aws/f8m8f4z3/avcorn:latest",
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {
                                    "Ref": "LogGroup"
                                },
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": {
                                    "Ref": "AWS::StackName"
                                }
                            }
                        },
                        "MountPoints": [
                            {
                                "ContainerPath": "/var/www",
                                "SourceVolume": {
                                    "Fn::Join": [
                                        "-",
                                        [
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "volume"
                                        ]
                                    ]
                                }
                            }
                        ],
                        "PortMappings": [
                            {
                                "Name": "web",
                                "ContainerPort": 80,
                                "HostPort": 80,
                                "Protocol": "tcp",
                                "AppProtocol": "http"
                            }
                        ]
                    }
                ],
                "Volumes": [
                    {
                        "Name": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "volume"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "LoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "loadbalancer"
                        ]
                    ]
                },
                "Type": "application",
                "Scheme": "internet-facing",
                "LoadBalancerAttributes": [
                    {
                        "Key": "idle_timeout.timeout_seconds",
                        "Value": "30"
                    }
                ],
                "Subnets": {
                    "Ref": "SubnetId"
                },
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ]
            }
        },
        "TargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "DependsOn": "LoadBalancer",
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "targetgroup"
                        ]
                    ]
                },
                "TargetType": "ip",
                "HealthCheckIntervalSeconds": 10,
                "HealthCheckPath": "/health",
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "Matcher": {
                    "HttpCode": "200"
                },
                "Port": 80,
                "Protocol": "HTTP",
                "UnhealthyThresholdCount": 2,
                "VpcId": {
                    "Ref": "VpcId"
                }
            }
        },
        "Listner": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "DependsOn": "ServiceRole",
            "Properties": {
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        }
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "LoadBalancer"
                },
                "Port": "80",
                "Protocol": "HTTP"
            }
        },
        "ListnerRule": {
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "DependsOn": "Listner",
            "Properties": {
                "Actions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        }
                    }
                ],
                "Conditions": [
                    {
                        "Field": "path-pattern",
                        "Values": [
                            "/"
                        ]
                    }
                ],
                "ListenerArn": {
                    "Ref": "Listner"
                },
                "Priority": 1
            }
        },
        "LaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionToAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIID"
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "echo ECS_CLUSTER=",
                                {
                                    "Ref": "Cluster"
                                },
                                " >> /etc/ecs/ecs.config\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource ScalingGroup ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "ScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier": {
                    "Ref": "SubnetId"
                },
                "LaunchConfigurationName": {
                    "Ref": "LaunchConfiguration"
                },
                "MinSize": "1",
                "MaxSize": {
                    "Ref": "MaxSize"
                },
                "DesiredCapacity": {
                    "Ref": "DesiredCapacity"
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT15M"
                },
                "AutoScalingCreationPolicy": {
                    "MinSuccessfulInstancesPercent": 0
                }
            },
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                }
            }
        },
        "Service": {
            "Type": "AWS::ECS::Service",
            "DependsOn": "Listner",
            "Properties": {
                "ServiceName": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "service"
                        ]
                    ]
                },
                "Cluster": {
                    "Ref": "Cluster"
                },
                "DesiredCount": 1,
                "DeploymentController": {
                    "Type": "EXTERNAL"
                },
                "PlacementConstraints": [
                    {
                        "Type": "distinctInstance"
                    }
                ],
                "PlacementStrategies": [
                    {
                        "Field": "CPU",
                        "Type": "binpack"
                    }
                ]
            }
        },
        "ScalingTarget": {
            "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
            "DependsOn": "Service",
            "Properties": {
                "MaxCapacity": 2,
                "MinCapacity": 1,
                "ResourceId": {
                    "Fn::Join": [
                        "",
                        [
                            "service/",
                            {
                                "Ref": "Cluster"
                            },
                            "/",
                            {
                                "Fn::GetAtt": [
                                    "Service",
                                    "Name"
                                ]
                            }
                        ]
                    ]
                },
                "RoleARN": {
                    "Fn::GetAtt": [
                        "ScalingRole",
                        "Arn"
                    ]
                },
                "ScalableDimension": "ecs:service:DesiredCount",
                "ServiceNamespace": "ecs"
            }
        },
        "ScalingPolicy": {
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "Properties": {
                "PolicyName": "AStepPolicy",
                "PolicyType": "StepScaling",
                "ScalingTargetId": {
                    "Ref": "ScalingTarget"
                },
                "StepScalingPolicyConfiguration": {
                    "AdjustmentType": "PercentChangeInCapacity",
                    "Cooldown": 60,
                    "MetricAggregationType": "Average",
                    "StepAdjustments": [
                        {
                            "MetricIntervalLowerBound": 0,
                            "ScalingAdjustment": 200
                        }
                    ]
                }
            }
        },
        "Alarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "EvaluationPeriods": "1",
                "Statistic": "Average",
                "Threshold": "10",
                "AlarmDescription": "Alarm if our ALB generates too many HTTP 500s.",
                "Period": "60",
                "AlarmActions": [
                    {
                        "Ref": "ScalingPolicy"
                    }
                ],
                "Namespace": "AWS/ApplicationELB",
                "Dimensions": [
                    {
                        "Name": "LoadBalancer",
                        "Value": {
                            "Fn::GetAtt": [
                                "LoadBalancer",
                                "LoadBalancerFullName"
                            ]
                        }
                    }
                ],
                "ComparisonOperator": "GreaterThanThreshold",
                "MetricName": "HTTPCode_ELB_5XX_Count"
            }
        },
        "Distribution": {
            "Type": "AWS::CloudFront::Distribution",
            "DependsOn": "TargetGroup",
            "Properties": {
                "DistributionConfig": {
                    "DefaultCacheBehavior": {
                        "TargetOriginId": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "origin"
                                ]
                            ]
                        },
                        "AllowedMethods": [
                            "GET",
                            "HEAD",
                            "OPTIONS"
                        ],
                        "ViewerProtocolPolicy": "allow-all",
                        "ForwardedValues": {
                            "QueryString": true
                        }
                    },
                    "Origins": [
                        {
                            "Id": {
                                "Fn::Join": [
                                    "-",
                                    [
                                        {
                                            "Ref": "AWS::StackName"
                                        },
                                        "origin"
                                    ]
                                ]
                            },
                            "CustomOriginConfig": {
                                "HTTPPort" : 80,
                                "HTTPSPort" : 443,
                                "OriginProtocolPolicy" : "http-only"
                            },
                            "DomainName": {
                                "Fn::GetAtt": [
                                    "LoadBalancer",
                                    "DNSName"
                                ]
                            }
                        }
                    ],
                    "Enabled" : "true"
                }
            }
        },
        "TaskSet": {
            "Type": "AWS::ECS::TaskSet",
            "DependsOn": "Service",
            "Properties": {
                "Cluster": {
                    "Ref": "Cluster"
                },
                "LaunchType": "EC2",
                "NetworkConfiguration": {
                    "AwsVpcConfiguration": {
                        "SecurityGroups": [
                            {
                                "Ref": "SecurityGroup"
                            }
                        ],
                        "Subnets": {
                            "Ref": "SubnetId"
                        }
                    }
                },
                "Scale": {
                    "Unit": "PERCENT",
                    "Value": 100
                },
                "Service": {
                    "Ref": "Service"
                },
                "TaskDefinition": {
                    "Ref": "TaskDefinition"
                },
                "LoadBalancers": [
                    {
                        "ContainerName": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "container"
                                ]
                            ]
                        },
                        "ContainerPort": 80,
                        "TargetGroupArn": {
                            "Ref": "TargetGroup"
                        }
                    }
                ]
            }
        },
        "PrimaryTaskSet": {
            "Type": "AWS::ECS::PrimaryTaskSet",
            "DependsOn": "TaskSet",
            "Properties": {
                "Cluster": {
                    "Ref": "Cluster"
                },
                "Service": {
                    "Ref": "Service"
                },
                "TaskSetId": {
                    "Fn::GetAtt": [
                        "TaskSet",
                        "Id"
                    ]
                }
            }
        }
    },
    "Outputs": {
        "ecsservice": {
            "Value": {
                "Ref": "Service"
            }
        },
        "ecscluster": {
            "Value": {
                "Ref": "Cluster"
            }
        },
        "lb": {
            "Description": "Your ALB DNS URL",
            "Value": {
                "Fn::GetAtt": [
                    "LoadBalancer",
                    "DNSName"
                ]
            }
        },
        "domain": {
            "Description": "Your CloudFront URL",
            "Value": {
                "Fn::GetAtt": [
                    "Distribution",
                    "DomainName"
                ]
            }
        }
    }
}